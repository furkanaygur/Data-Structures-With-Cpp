#include<iostream>
using namespace std;
 
 
void sift_min(int *p, int left, int right)
{
	int temp, i;
 					 
	i = left +left +1;  
    temp = p[left]; 
 
	do {
		if (i < right && p[i] < p[i+1]) 
			i++;
		if (temp >= p[i])
			break;
		p[left] = p[i];
		left = i;
		i = 2 * i + 1;
	} while (i <= right);
	p[left] = temp;
}

void sift_max(int *p, int left, int right)
{
	int temp, i;
 					 
	i = left +left +1;  
    temp = p[left]; 
 
	do {
		if (i < right && p[i] > p[i+1]) 
			i++;
		if (temp <= p[i])
			break;
		p[left] = p[i];
		left = i;
		i = 2 * i + 1;
	} while (i <= right);
	p[left] = temp;
}

void heap_sort (int *p, int size,char choice)
{
	int  left, right, temp;
 
	if (size <= 1)
    	return;
	left = size / 2;
	right = size - 1;
 
	while (--left >= 0)
	{
		if(choice=='y'){
			sift_max(p, 0, right);
		}
		else{
			sift_min(p, 0, right);
		}
	}
		
 
	for (;;) {
		temp = p[0];
		p[0] = p[right];
		p[right] = temp;
		if (--right <= 0)
		{
				break;
		}
		if(choice=='y'){
			sift_max(p, 0, right);
		}
		else{
			sift_min(p, 0, right);
		}
		
   }
}

void display(int *p, int size)
{	
	for (int i = 0; i < size; i++)
		cout<<p[i]<<" ";
	cout<<endl;
}
 
 
int main(void)
{
	int A_SIZE;
	char choice ;
	cout<<"Size: ";
	cin>>A_SIZE;
	int d[A_SIZE] = {};
	cout<<"Enter the elements: ";
	for(int i=0;i<A_SIZE;i++){
		cout<<i+1<<". = ";
		cin>>d[i];
	}
	cout<<"Do you want to maxHeap [Yes (y) or No (n)]";
	cin>>choice;
	display(d, A_SIZE);
	heap_sort(d, A_SIZE,choice);
	display(d, A_SIZE);
	return 0;
}

